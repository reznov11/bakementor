# Generated by Django 5.2.6 on 2025-10-01 12:12

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'In review'), ('published', 'Published')], default='draft', max_length=20)),
                ('is_public', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='PageDraftLock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('locked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_locks', to=settings.AUTH_USER_MODEL)),
                ('page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='draft_lock', to='pages.page')),
            ],
            options={
                'verbose_name': 'Page draft lock',
                'verbose_name_plural': 'Page draft locks',
            },
        ),
        migrations.CreateModel(
            name='PageVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('component_tree', models.JSONField(default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_published', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_page_versions', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='pages.page')),
            ],
            options={
                'ordering': ('-created_at',),
                'unique_together': {('page', 'version')},
            },
        ),
        migrations.AddField(
            model_name='page',
            name='current_version',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_for_page', to='pages.pageversion'),
        ),
        migrations.AddField(
            model_name='page',
            name='published_version',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_for_page', to='pages.pageversion'),
        ),
    ]
